<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel="stylesheet" href="/stylesheets/style.css"/>
    <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>
    <script>
        // 拦截器
        // Add a request interceptor
        axios.interceptors.request.use(function (config) {
            console.log('请求发出前，执行的方法')
            // Do something before request is sent
            const token = localStorage.getItem('token')
            config.headers.Authorization = `Bearer ${token}`
            return config;
        }, function (error) {
            // Do something with request error
            return Promise.reject(error);
        });

        // Add a response interceptor
        axios.interceptors.response.use(function (response) {
            // console.log('任何请求成功后，第一个调用的方法')
            // console.log(response.headers)
            const {authorization} = response.headers
            authorization && localStorage.setItem('token', authorization)
            return response;
        }, function (error) {
            // Any status codes that falls outside the range of 2xx cause this function to trigger
            // Do something with response error
            return Promise.reject(error);
        });
    </script>
</head>
<body>
<h1>后台系统-用户管理业务</h1>
<button id="logout">退出登录</button>
<div>用户名：<input id="username"/></div>
<div>密 码：<input type="password" id="password"/></div>
<div>年 龄：<input type="number" id="age"/></div>
<div>
    <button id="register">添加用户</button>
</div>
<hr/>
<!-- <div>
  <button id="update">更新用户</button>
  <button id="delete">删除用户</button>
</div> -->

<table border="1">
    <thead>
    <td>id</td>
    <td>用户名</td>
    <td>年龄</td>
    <td>操作</td>
    </thead>
    <tbody></tbody>
</table>

<script>
    const username = document.querySelector("#username");
    const password = document.querySelector("#password");
    const age = document.querySelector("#age");
    const register = document.querySelector("#register");
    const logout = document.querySelector("#logout");
    const update = document.getElementsByClassName(".update");
    const handleDelete = document.getElementsByClassName(".delete");

    // 注册
    register.onclick = () => {
        axios.post('/api/user', {
            username: username.value,
            password: password.value,
            age: age.value,
        }).then(res => {
            getList()
        })
    };

    // 获取列表
    const getList = () => {
        axios.get('/api/user?page=1&limit=10').then(res => {
            const list = res.data || [];
            const el = document.querySelector("tbody");
            el.innerHTML = list.map((item) =>
                `<tr>
                        <td>${item._id}</td>
                        <td>${item.username}</td>
                        <td>${item.age}</td>
                        <td><button class="update" data-id="${item._id}">更新</button></td>
                        <td><button class="delete" data-id="${item._id}">删除</button></td>
                    </tr>`).join("");
        })
    };
    getList();

    // 退出登陆
    logout.onclick = () => {
        localStorage.removeItem('token ')
        location.href = '/login'
    }

    document.addEventListener("click", (e) => {
        // 更新
        if (e.srcElement.className === "update") {
            console.log(e.srcElement.className);
            let id = e.srcElement.dataset.id;
            axios.put(`/api/user/${id}`, {
                username: username.value,
                password: password.value,
                age: age.value,
            }).then(res => {
                console.log(res)
                getList();
            }).catch(err => {
                location.href = '/login'
                console.log(err)
            })
        } else if (e.srcElement.className === "delete") {
            // 删除
            console.log(e.srcElement.className);
            let id = e.srcElement.dataset.id;
            axios.delete(`/api/user/${id}`).then(res => {
                console.log(res);
                getList();
            }).catch(err => {
                console.log(err)
            })
        }
    });
</script>
</body>
</html>
